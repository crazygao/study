* Packages and crates
** Create a package: `cargo new`
** Convention:
*** _src/main.rs_: a binary
*** _src/lib.rs_: a library
* Define Modules to Control Scope and Privacy
** create a new package libarary: `cargo new --lib`
#+begin_src rustic
  mod front_of_house {
      mod hosting {
          fn add_to_waitlist() {}
          fn seat_at_table() {}
      }
      mod serving {
          fn take_order() {}
          fn serve_order() {}
          fn take_payment() {}
      }
  }
#+end_src
* Paths for Referring an Item in the module tree
** Paths
1. absolute path: from `crate` root  by using a crate name or a literal `crate`
2. relative path: from current module, use `self`, `super`, or an identifier in the current module.
** 
